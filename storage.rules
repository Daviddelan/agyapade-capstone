rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function hasRole(role) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isAdmin() {
      return hasRole('admin');
    }

    function isValidFileType() {
      return request.resource.contentType.matches('application/pdf|image/jpeg|image/png');
    }

    function isValidFileSize() {
      return request.resource.size <= 10 * 1024 * 1024; // 10MB
    }

    // Allow CORS preflight requests
    match /{allPaths=**} {
      allow read: if true;
      allow write: if isSignedIn();
    }
    
    // Collateral documents
    match /collaterals/{userId}/{fileName} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow create: if isSignedIn() 
                   && isOwner(userId) 
                   && isValidFileType() 
                   && isValidFileSize()
                   && request.resource.metadata.userId == userId;
      allow delete: if isSignedIn() && (isOwner(userId) || isAdmin());
    }
  }
}